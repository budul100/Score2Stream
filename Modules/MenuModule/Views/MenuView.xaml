<UserControl
    x:Class="MenuModule.Views.MenuView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:fl="clr-namespace:Fluent;assembly=Fluent"
    xmlns:hl="clr-namespace:MenuModule.Helpers"
    xmlns:vm="clr-namespace:MenuModule.ViewModels"
    d:DataContext="{Binding Source={x:Static hl:DesignTimeViewModelLocator.MenuViewModel}}"
    d:DesignWidth="500"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
    </UserControl.Resources>

    <DockPanel>
        <fl:Ribbon
            AutomaticStateManagement="True"
            IsAutomaticCollapseEnabled="False"
            IsCollapsed="False"
            IsQuickAccessToolBarMenuDropDownVisible="False"
            IsQuickAccessToolBarVisible="False"
            SelectedTabIndex="{Binding SelectedTabIndex, Mode=TwoWay}">

            <fl:RibbonTabItem Header="Webcam">
                <fl:RibbonGroupBox Header="Webcam control">
                    <fl:Spinner Header="Camera device id" Value="{Binding CameraDeviceId}" />
                    <fl:Button Command="{Binding WebcamPlayCommand}" Header="Play webcam" />
                    <fl:Button Command="{Binding WebcamPauseCommand}" Header="Pause webcam" />
                </fl:RibbonGroupBox>
                <fl:RibbonGroupBox Header="Graphics control">
                    <fl:Button Command="{Binding GraphicsStartCommand}" Header="Start graphics server" />
                    <fl:Button Command="{Binding GraphicsEndCommand}" Header="End graphics server" />
                    <fl:Button Command="{Binding GraphicsOpenCommand}" Header="Open graphics server" />
                </fl:RibbonGroupBox>
            </fl:RibbonTabItem>

            <fl:RibbonTabItem Header="Clips">
                <fl:RibbonGroupBox Header="Clips selection">
                    <fl:Button Command="{Binding ClipAddCommand}" Header="Add new clip" />
                    <fl:Button Command="{Binding ClipRemoveCommand}" Header="Remove selected clip" />
                    <fl:Spinner Header="Comparison threshold" Value="{Binding ThresholdCompare}" />
                </fl:RibbonGroupBox>
                <fl:RibbonGroupBox Header="Templates selection">
                    <fl:Button Command="{Binding ClipAsTemplateCommand}" Header="Use clip as template" />
                </fl:RibbonGroupBox>
            </fl:RibbonTabItem>

            <fl:RibbonTabItem Header="Templates" IsEnabled="{Binding HasTemplates}">
                <fl:RibbonGroupBox Header="Templates selection">
                    <fl:DropDownButton Header="Select template" ItemsSource="{Binding Templates}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="vm:TemplateViewModel">
                                <fl:MenuItem
                                    Command="{Binding OnClickCommand}"
                                    Header="{Binding Name}"
                                    Size="Small" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </fl:DropDownButton>
                    <fl:Button Command="{Binding TemplateRemoveCommand}" Header="Remove current template" />
                </fl:RibbonGroupBox>
                <fl:RibbonGroupBox Header="Samples detecion">
                    <fl:Button Command="{Binding SampleAddCommand}" Header="Add image as sample" />
                    <fl:Button Command="{Binding SampleRemoveCommand}" Header="Remove selected sample" />
                </fl:RibbonGroupBox>
            </fl:RibbonTabItem>

            <fl:RibbonTabItem Header="Content" />
        </fl:Ribbon>
    </DockPanel>
</UserControl>