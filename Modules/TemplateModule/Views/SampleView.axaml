<UserControl
    x:Class="Score2Stream.TemplateModule.Views.SampleView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:a="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
    xmlns:b="using:Score2Stream.TemplateModule.Behaviors"
    xmlns:co="clr-namespace:Score2Stream.Commons.Converters;assembly=Commons"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:en="clr-namespace:Score2Stream.Commons.Enums;assembly=Commons"
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="80"
    d:DesignWidth="200"
    IsSelected="{Binding IsSelected, Mode=TwoWay}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <co:EnumToStringConverter x:Key="EnumToStringConverter" />
    </UserControl.Resources>

    <Border
        Name="SampleBorder"
        Margin="2"
        VerticalAlignment="Center"
        BorderBrush="LightGray"
        BorderThickness="4"
        Classes.IsSelected="{Binding IsSelected}"
        Classes.IsUnverified="{Binding IsUnverified}"
        CornerRadius="3"
        IsVisible="{Binding IsVisible}">

        <Border.Styles>

            <Style Selector="Border.IsUnverified">
                <Setter Property="Background" Value="Bisque" />
            </Style>

            <Style Selector="Border.IsSelected">
                <Setter Property="Background" Value="LightBlue" />
            </Style>

            <Style Selector="Border">
                <Setter Property="Background" Value="Gainsboro" />
            </Style>
        </Border.Styles>

        <i:Interaction.Behaviors>
            <a:EventTriggerBehavior EventName="PointerPressed" SourceObject="SampleBorder">
                <a:InvokeCommandAction Command="{Binding OnSelectionCommand}" />
            </a:EventTriggerBehavior>
        </i:Interaction.Behaviors>

        <StackPanel Orientation="Horizontal">

            <Border
                Name="ImageBorder"
                Margin="2"
                VerticalAlignment="Center"
                BorderBrush="LightSlateGray"
                BorderThickness="3">

                <i:Interaction.Behaviors>
                    <a:DataTriggerBehavior
                        Binding="{Binding Type, Converter={StaticResource EnumToStringConverter}}"
                        ComparisonCondition="Equal"
                        Value="{x:Static en:MatchType.Match}">
                        <a:ChangePropertyAction
                            PropertyName="BorderBrush"
                            TargetObject="ImageBorder"
                            Value="GreenYellow" />
                    </a:DataTriggerBehavior>
                    <a:DataTriggerBehavior
                        Binding="{Binding Type, Converter={StaticResource EnumToStringConverter}}"
                        ComparisonCondition="Equal"
                        Value="{x:Static en:MatchType.Similar}">
                        <a:ChangePropertyAction
                            PropertyName="BorderBrush"
                            TargetObject="ImageBorder"
                            Value="LightPink" />
                    </a:DataTriggerBehavior>
                    <a:DataTriggerBehavior
                        Binding="{Binding Type, Converter={StaticResource EnumToStringConverter}}"
                        ComparisonCondition="Equal"
                        Value="{x:Static en:MatchType.None}">
                        <a:ChangePropertyAction
                            PropertyName="BorderBrush"
                            TargetObject="ImageBorder"
                            Value="LightSlateGray" />
                    </a:DataTriggerBehavior>
                </i:Interaction.Behaviors>

                <Image
                    Width="40"
                    Height="60"
                    VerticalAlignment="Center"
                    Source="{Binding Bitmap}"
                    Stretch="Uniform" />
            </Border>

            <Grid Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="4" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal">

                    <TextBlock
                        Margin="0,0,4,0"
                        VerticalAlignment="Center"
                        Text="Value" />

                    <TextBox
                        Name="ValueTextBox"
                        Width="40"
                        VerticalAlignment="Center"
                        Text="{Binding Value, Mode=TwoWay}">

                        <i:Interaction.Behaviors>
                            <a:EventTriggerBehavior EventName="GotFocus" SourceObject="ValueTextBox">
                                <a:InvokeCommandAction Command="{Binding OnFocusGotCommand}" />
                            </a:EventTriggerBehavior>
                            <a:EventTriggerBehavior EventName="LostFocus" SourceObject="ValueTextBox">
                                <a:InvokeCommandAction Command="{Binding OnFocusLostCommand}" />
                            </a:EventTriggerBehavior>

                            <b:FocusOnSelectionBehavior IsSelected="{Binding IsSelected, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>

                        <TextBox.KeyBindings>
                            <KeyBinding Command="{Binding OnRemoveCommand}" Gesture="Shift+Delete" />
                            <KeyBinding Command="{Binding OnSelectionNextCommand}" Gesture="Tab" />
                            <KeyBinding Command="{Binding OnSelectionPreviousCommand}" Gesture="Shift+Tab" />
                        </TextBox.KeyBindings>
                    </TextBox>
                </StackPanel>

                <TextBlock
                    Grid.Row="2"
                    VerticalAlignment="Center"
                    Text="{Binding Similarity}" />
            </Grid>
        </StackPanel>
    </Border>
</UserControl>